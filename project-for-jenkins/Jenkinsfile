pipeline {	

	environment { 
		DOCKERCOMPOSECONTEXT = '/home/docker-scripts/project-for-jenkins/docker-compose.yml'
	}
	
	agent any
	
	stages {
		stage('Running Container on Host'){
			steps {
				script {
					try {
						sh 'docker-compose -f $DOCKERCOMPOSECONTEXT up -d'
					} catch (Exception e) {
						slackSend (color: '#FF9FA1', message: 'FAILURE: Pipeline Failed', tokenCredentialId: 'slack-token')
						sh "echo $e"
						currentBuild.result = 'ABORTED'
						error('Erro')
					}
				}
			}
		}
		stage('Cleaning Unused Images')
		{
			steps {
				script {
					try {
						sh 'docker image prune -af'
					} catch (Exception e) {
						slackSend (color: '#FF9FA1', message: 'FAILURE: Pipeline Failed', tokenCredentialId: 'slack-token')
						sh "echo $e"
						currentBuild.result = 'ABORTED'
						error('Erro')
					}
				}
			}
		}
		stage('Sending message to Slack') {
			steps {
				slackSend (color: '#BDFFC3', message: 'SUCESS : http://localhost:4545/', tokenCredentialId: 'slack-token')
			}
		}
	}
}